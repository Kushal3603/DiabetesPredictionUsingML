{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\firstapp\\\\frontend\\\\src\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport './Test.css';\nimport { Questions } from \"./Questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Test() {\n  _s();\n  let [index, setIndex] = useState(0);\n  let [question, setQuestion] = useState(Questions[index]);\n  let [lock, setLock] = useState(false);\n  let [result, setResult] = useState(false);\n  let option1 = useRef(null);\n  let option2 = useRef(null);\n  let option3 = useRef(null);\n  let option_array = [option1, option2];\n  const checkAns = (e, ans) => {\n    if (lock === false) {\n      e.target.classList.add(\"selected\");\n      setLock(true);\n      return null;\n    }\n  };\n  const reset = () => {\n    setIndex(0);\n    setQuestion(Questions[0]);\n    setLock(false);\n    setResult(false);\n  };\n  const next = () => {\n    if (lock === true) {\n      if (index === Questions.length - 1) {\n        setResult(true);\n        return 0;\n      }\n      setIndex(++index);\n      setQuestion(Questions[index]);\n      setLock(false);\n      option_array.map(option => {\n        option.current.classList.remove(\"selected\");\n      });\n    }\n  };\n  const prev = () => {\n    setIndex(--index);\n    setQuestion(Questions[index]);\n    setLock(false);\n    option_array.map(option => {\n      option.current.classList.remove(\"selected\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Diabetes Prediction Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), result ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [index + 1, \". \", question.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          ref: option1,\n          onClick: e => checkAns(e, 1),\n          children: question.option1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          ref: option2,\n          onClick: e => checkAns(e, 2),\n          children: question.option2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), question.option3 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            ref: option3,\n            onClick: e => checkAns(e, 3),\n            children: question.option3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), index !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"prev\",\n          onClick: prev,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 22\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next\",\n        onClick: next,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"index\",\n        children: [index + 1, \" of \", Questions.length, \" questions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), result ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Test is submitted successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset\",\n        onClick: reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"YC3aj4EeKoP1NRLyYqsT4TQO77k=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useRef","useState","Questions","jsxDEV","_jsxDEV","Fragment","_Fragment","Test","_s","index","setIndex","question","setQuestion","lock","setLock","result","setResult","option1","option2","option3","option_array","checkAns","e","ans","target","classList","add","reset","next","length","map","option","current","remove","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","_c","$RefreshReg$"],"sources":["D:/project/firstapp/frontend/src/Test.js"],"sourcesContent":["import React,{useRef, useState} from \"react\";\r\nimport './Test.css'\r\nimport { Questions } from \"./Questions\";\r\n\r\nfunction Test() {\r\n  let [index, setIndex]=useState(0);\r\n  let[question,setQuestion]=useState(Questions[index]);\r\n  let [lock,setLock]=useState(false);\r\n  let [result,setResult]=useState(false)\r\n\r\n  let option1 =useRef(null);\r\n  let option2=useRef(null);\r\n  let option3=useRef(null)\r\n  let option_array=[option1,option2];\r\n  \r\n  const checkAns=(e,ans)=>{\r\n    if(lock===false){\r\n      e.target.classList.add(\"selected\")\r\n      setLock(true)\r\n      return null;\r\n    }\r\n    \r\n  }\r\n\r\n  const reset=()=>{\r\n    setIndex(0);\r\n    setQuestion(Questions[0])\r\n    setLock(false)\r\n    setResult(false)\r\n  }\r\n\r\n  const next=()=>{\r\n      if(lock===true){\r\n        if(index===Questions.length-1){\r\n          setResult(true);\r\n          return 0;\r\n        }\r\n        setIndex(++index);\r\n        setQuestion(Questions[index]);\r\n        setLock(false)\r\n        option_array.map((option)=>{\r\n          option.current.classList.remove(\"selected\")\r\n        })\r\n      }\r\n    }\r\n\r\n    const prev=()=>{\r\n      setIndex(--index);\r\n        setQuestion(Questions[index]);\r\n        setLock(false)\r\n        option_array.map((option)=>{\r\n          option.current.classList.remove(\"selected\")\r\n        })\r\n    }\r\n  return (\r\n    <div className=\"container\">\r\n        <h1>Diabetes Prediction Test</h1>\r\n        <hr/>\r\n        {result?<></>:<>\r\n        <h2>{index+1}. {question.question}</h2>\r\n        <ul>\r\n          <li ref={option1} onClick={(e)=>checkAns(e,1)}>{question.option1}</li>\r\n          <li ref={option2} onClick={(e)=>checkAns(e,2)}>{question.option2}</li>\r\n          {question.option3?<>\r\n          <li ref={option3} onClick={(e)=>checkAns(e,3)}>{question.option3}</li>\r\n          </>:<></>}\r\n        </ul>\r\n        {index!==0?<><button className=\"prev\" onClick={prev}>Previous</button></>:<></>}\r\n        <button className=\"next\" onClick={next}>Next</button>\r\n        <div className=\"index\">{index+1} of {Questions.length} questions</div>\r\n      </>}\r\n      {result?<>\r\n      <h2>Test is submitted successfully</h2>\r\n      <button className=\"reset\" onClick={reset}>Reset</button>\r\n      </>:<></>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Test"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}