{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\firstapp\\\\frontend\\\\src\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport './Test.css';\nimport { Questions } from \"./Questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Test() {\n  _s();\n  const [index, setIndex] = useState(0);\n  const [question, setQuestion] = useState(Questions[index]);\n  const [lock, setLock] = useState(false);\n  const [result, setResult] = useState(false);\n  const optionRefs = useRef([]);\n  const checkAns = (e, ans) => {\n    if (lock === false) {\n      e.target.classList.add(\"selected\");\n      setLock(true);\n      return null;\n    }\n    console.log(ans);\n  };\n  const reset = () => {\n    setIndex(0);\n    setQuestion(Questions[0]);\n    setLock(false);\n    setResult(false);\n  };\n  const next = () => {\n    if (lock === true) {\n      if (index === Questions.length - 1) {\n        setResult(true);\n        return 0;\n      }\n      setIndex(prevIndex => {\n        const newIndex = prevIndex + 1;\n        setQuestion(Questions[newIndex]);\n        setLock(false);\n        optionRefs.current.forEach(option => option.classList.remove(\"selected\"));\n        return newIndex;\n      });\n    }\n  };\n  const prev = () => {\n    if (index > 0) {\n      setIndex(prevIndex => {\n        const newIndex = prevIndex - 1;\n        setQuestion(Questions[newIndex]);\n        setLock(false);\n        optionRefs.current.forEach(option => option.classList.remove(\"selected\"));\n        return newIndex;\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Diabetes Prediction Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), result ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Test is submitted successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset\",\n        onClick: reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [index + 1, \". \", question.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(question).filter(key => key.startsWith(\"option\")).map((option, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          ref: el => optionRefs.current[i] = el,\n          onClick: e => checkAns(e, i + 1),\n          children: question[option]\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prev\",\n        onClick: prev,\n        disabled: index === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next\",\n        onClick: next,\n        disabled: index === Questions.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"index\",\n        children: [index + 1, \" of \", Questions.length, \" questions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"Hw1qDjCEPL1GwZatoxDYSKppP0o=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useRef","useState","Questions","jsxDEV","_jsxDEV","Fragment","_Fragment","Test","_s","index","setIndex","question","setQuestion","lock","setLock","result","setResult","optionRefs","checkAns","e","ans","target","classList","add","console","log","reset","next","length","prevIndex","newIndex","current","forEach","option","remove","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","keys","filter","key","startsWith","map","i","ref","el","disabled","_c","$RefreshReg$"],"sources":["D:/project/firstapp/frontend/src/Test.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport './Test.css'\r\nimport { Questions } from \"./Questions\";\r\n\r\nfunction Test() {\r\n  const [index, setIndex] = useState(0);\r\n  const [question, setQuestion] = useState(Questions[index]);\r\n  const [lock, setLock] = useState(false);\r\n  const [result, setResult] = useState(false);\r\n\r\n  const optionRefs = useRef([]);\r\n\r\n  const checkAns = (e, ans) => {\r\n    if (lock === false) {\r\n      e.target.classList.add(\"selected\");\r\n      setLock(true);\r\n      return null;\r\n    }\r\n    console.log(ans);\r\n  }\r\n\r\n  const reset = () => {\r\n    setIndex(0);\r\n    setQuestion(Questions[0]);\r\n    setLock(false);\r\n    setResult(false);\r\n  }\r\n\r\n  const next = () => {\r\n    if (lock === true) {\r\n      if (index === Questions.length - 1) {\r\n        setResult(true);\r\n        return 0;\r\n      }\r\n      setIndex(prevIndex => {\r\n        const newIndex = prevIndex + 1;\r\n        setQuestion(Questions[newIndex]);\r\n        setLock(false);\r\n        optionRefs.current.forEach(option => option.classList.remove(\"selected\"));\r\n        return newIndex;\r\n      });\r\n    }\r\n  }\r\n\r\n  const prev = () => {\r\n    if (index > 0) {\r\n      setIndex(prevIndex => {\r\n        const newIndex = prevIndex - 1;\r\n        setQuestion(Questions[newIndex]);\r\n        setLock(false);\r\n        optionRefs.current.forEach(option => option.classList.remove(\"selected\"));\r\n        return newIndex;\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Diabetes Prediction Test</h1>\r\n      <hr />\r\n      {result ? (\r\n        <>\r\n          <h2>Test is submitted successfully</h2>\r\n          <button className=\"reset\" onClick={reset}>Reset</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h2>{index + 1}. {question.question}</h2>\r\n          <ul>\r\n            {Object.keys(question).filter(key => key.startsWith(\"option\")).map((option, i) => (\r\n              <li key={option} ref={el => optionRefs.current[i] = el} onClick={(e) => checkAns(e, i + 1)}>{question[option]}</li>\r\n            ))}\r\n          </ul>\r\n          <button className=\"prev\" onClick={prev} disabled={index === 0}>Previous</button>\r\n          <button className=\"next\" onClick={next} disabled={index === Questions.length - 1}>Next</button>\r\n          <div className=\"index\">{index + 1} of {Questions.length} questions</div>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Test;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}