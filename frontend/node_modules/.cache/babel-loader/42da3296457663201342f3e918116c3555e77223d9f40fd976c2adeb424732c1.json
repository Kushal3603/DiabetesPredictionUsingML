{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\firstapp\\\\frontend\\\\src\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './Test.css';\nimport { Questions } from \"./Questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Test() {\n  _s();\n  const [index, setIndex] = useState(0);\n  const [question, setQuestion] = useState(Questions[index]);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [floatInput, setFloatInput] = useState(0);\n  const [result, setResult] = useState(false);\n  useEffect(() => {\n    setQuestion(Questions[index]);\n  }, [index]);\n  const checkAns = ans => {\n    if (selectedAnswer === null) {\n      setSelectedAnswer(ans);\n    }\n  };\n  const handleFloatInput = e => {\n    setFloatInput(parseFloat(e.target.value));\n  };\n  const reset = () => {\n    setIndex(0);\n    setSelectedAnswer(null);\n    setFloatInput(0);\n    setResult(false);\n  };\n  const next = () => {\n    if (index === 0 || selectedAnswer !== null) {\n      if (index === 0 && (floatInput < 0 || floatInput > 100)) {\n        alert(\"Please enter a value between 0 and 100 for the first question.\");\n        return;\n      }\n      if (index === Questions.length - 1) {\n        setResult(true);\n        return;\n      }\n      setIndex(prevIndex => prevIndex + 1);\n      setSelectedAnswer(null);\n    } else {\n      alert(\"Please select an answer before proceeding to the next question.\");\n    }\n  };\n  const prev = () => {\n    if (index > 0) {\n      setIndex(prevIndex => prevIndex - 1);\n      setSelectedAnswer(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Diabetes Prediction Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), result ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Test is submitted successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset\",\n        onClick: reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: index === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Enter a float value between 0 and 100:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: 0,\n          max: 100,\n          step: 0.1,\n          value: floatInput,\n          onChange: handleFloatInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Value: \", floatInput.toFixed(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [index, \". \", question.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.keys(question).filter(key => key.startsWith(\"option\")).map((option, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: selectedAnswer === i + 1 ? \"selected\" : \"\",\n            onClick: () => checkAns(i + 1),\n            children: question[option]\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"prev\",\n          onClick: prev,\n          disabled: index === 0,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next\",\n          onClick: next,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"index\",\n          children: [index, \" of \", Questions.length, \" questions\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), selectedAnswer !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Selected Answer: \", question[`option${selectedAnswer}`]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"24aaqEtiOtI96dbhsF/lbmGMWWk=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useEffect","Questions","jsxDEV","_jsxDEV","Fragment","_Fragment","Test","_s","index","setIndex","question","setQuestion","selectedAnswer","setSelectedAnswer","floatInput","setFloatInput","result","setResult","checkAns","ans","handleFloatInput","e","parseFloat","target","value","reset","next","alert","length","prevIndex","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","min","max","step","onChange","toFixed","Object","keys","filter","key","startsWith","map","option","i","disabled","_c","$RefreshReg$"],"sources":["D:/project/firstapp/frontend/src/Test.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './Test.css'\r\nimport { Questions } from \"./Questions\";\r\n\r\nfunction Test() {\r\n  const [index, setIndex] = useState(0);\r\n  const [question, setQuestion] = useState(Questions[index]);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [floatInput, setFloatInput] = useState(0);\r\n  const [result, setResult] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setQuestion(Questions[index]);\r\n  }, [index]);\r\n\r\n  const checkAns = (ans) => {\r\n    if (selectedAnswer === null) {\r\n      setSelectedAnswer(ans);\r\n    }\r\n  };\r\n\r\n  const handleFloatInput = (e) => {\r\n    setFloatInput(parseFloat(e.target.value));\r\n  };\r\n\r\n  const reset = () => {\r\n    setIndex(0);\r\n    setSelectedAnswer(null);\r\n    setFloatInput(0);\r\n    setResult(false);\r\n  };\r\n\r\n  const next = () => {\r\n    if (index === 0 || selectedAnswer !== null) {\r\n      if (index === 0 && (floatInput < 0 || floatInput > 100)) {\r\n        alert(\"Please enter a value between 0 and 100 for the first question.\");\r\n        return;\r\n      }\r\n      if (index === Questions.length - 1) {\r\n        setResult(true);\r\n        return;\r\n      }\r\n      setIndex(prevIndex => prevIndex + 1);\r\n      setSelectedAnswer(null);\r\n    } else {\r\n      alert(\"Please select an answer before proceeding to the next question.\");\r\n    }\r\n  };\r\n\r\n  const prev = () => {\r\n    if (index > 0) {\r\n      setIndex(prevIndex => prevIndex - 1);\r\n      setSelectedAnswer(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Diabetes Prediction Test</h1>\r\n      <hr />\r\n      {result ? (\r\n        <>\r\n          <h2>Test is submitted successfully</h2>\r\n          <button className=\"reset\" onClick={reset}>Reset</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          {index === 0 ? (\r\n            <>\r\n              <h2>Enter a float value between 0 and 100:</h2>\r\n              <input\r\n                type=\"range\"\r\n                min={0}\r\n                max={100}\r\n                step={0.1}\r\n                value={floatInput}\r\n                onChange={handleFloatInput}\r\n              />\r\n              <p>Value: {floatInput.toFixed(1)}</p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h2>{index}. {question.question}</h2>\r\n              <ul>\r\n                {Object.keys(question).filter(key => key.startsWith(\"option\")).map((option, i) => (\r\n                  <li\r\n                    key={option}\r\n                    className={selectedAnswer === i + 1 ? \"selected\" : \"\"}\r\n                    onClick={() => checkAns(i + 1)}\r\n                  >\r\n                    {question[option]}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              <button className=\"prev\" onClick={prev} disabled={index === 0}>Previous</button>\r\n              <button className=\"next\" onClick={next}>Next</button>\r\n              <div className=\"index\">{index} of {Questions.length} questions</div>\r\n              {selectedAnswer !== null && <p>Selected Answer: {question[`option${selectedAnswer}`]}</p>}\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}